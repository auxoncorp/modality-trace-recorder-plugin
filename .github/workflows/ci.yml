name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest]

    steps:
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0-0-dev libftdi1-dev libudev-dev

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache target
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo--${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy, rustfmt
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Doc Generation
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable, nightly]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Install system packages (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0-0-dev libftdi1-dev libudev-dev

      - name: Install system packages (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          vcpkg install libftdi1:x64-windows libusb:x64-windows

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache target
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo--${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Build debug binary
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable, nightly]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Install system packages (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0-0-dev libftdi1-dev libudev-dev

      - name: Install system packages (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          vcpkg install libftdi1:x64-windows libusb:x64-windows

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache target
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo--${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features -- --test-threads=1
